type _Schema_
  @fulltext(
    name: "searchAddressBook"
    language: en
    algorithm: rank
    include: [
      # REF: https://thegraph.academy/developers/defining-a-subgraph/
      # All fields included in the definition must be from a single entity type
      { entity: "Created", fields: [{ name: "name" }, { name: "email" }] }
    ]
  )

type Created @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  index: BigInt! # uint256
  name: String!
  email: String!
  age: BigInt! # uint256
  birthDate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deleted @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  index: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IndexUpdated @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  index: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Updated @entity(immutable: true) {
  id: Bytes!
  userAddress: Bytes! # address
  index: BigInt! # uint256
  name: String!
  email: String!
  age: BigInt! # uint256
  birthDate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
